#!/bin/bash
chmod +x ./tranvers.sh
./tranvers.sh /home | sed 's/\(.*\)[/]/\1;/g' > tranverse_output.txt

sqlite3 linux > users.txt <<EOS
	create table if not exists main_table (
		access_rights integer,
		bytes_blocks_allocated integer,
		size_of_blocks integer,
		device_number text,
		file_type text,
		group_id integer,
		group_name text,
		hard_links integer,
		inode_number integer,
		mount_point text,
		file_path text,
		file_name text,
		IO_transfer_size integer,
		file_size integer,
		user_id integer,
		user_name text);
.separator ";"
.import ./tranverse_output.txt main_table
SELECT DISTINCT user_name, user_ID FROM main_table;
EOS

sqlite3 linux > filesystem.txt<<EOS
	create table if not exists users (
		user_name text, 
		user_ID integer, 
		PRIMARY KEY(user_name));
.separator ";"
.import ./users.txt users
SELECT DISTINCT file_name, file_path, inode_number, device_number FROM main_table;
EOS

sqlite3 linux > groups.txt <<EOS
	create table if not exists filesystem (
		file_name text, 
		file_path text, 
		inode_number integer, 		
		device_number,
		PRIMARY KEY(file_path, file_name), 
		FOREIGN KEY(inode_number) REFERENCES inode_data(inode_number), 
		FOREIGN KEY(device_number) REFERENCES inode_data(device_number));
.separator ";"
.import ./filesystem.txt filesystem
SELECT DISTINCT group_name, group_id FROM main_table;
EOS

sqlite3 linux > inode_data.txt <<EOS
	create table if not exists groups (
		group_name text, 
		group_id integer,
		PRIMARY KEY(group_name)); 
		
.separator ";"
.import ./groups.txt groups
SELECT DISTINCT inode_number, device_number, file_type, file_size, bytes_blocks_allocated, hard_links, access_rights, user_name, group_name FROM main_table;
EOS

sqlite3 linux > hardware.txt <<EOS
	create table if not exists inode_data (
		inode_number integer, 
		device_number integer, 
		file_type text, 
		file_size integer, 
		bytes_blocks_allocated integer, 
		hard_links integer, 
		access_rights integer, 
		user_name text, 
		group_name text,
		PRIMARY KEY(inode_number, device_number), 
		FOREIGN KEY(user_name) REFERENCES users(user_name), 
		FOREIGN KEY(group_name) REFERENCES Groups(group_name));
.separator ";"
.import ./inode_data.txt inode_data
SELECT DISTINCT device_number, mount_point, IO_transfer_size, size_of_blocks FROM main_table;
EOS

sqlite3 linux <<EOS
	create table if not exists hardware (
		device_number integer, 
		mount_point text, 
		IO_transfer_size, 
		size_of_blocks, 
		PRIMARY KEY(mount_point, device_number));

.separator ";"
.import ./hardware.txt hardware
EOS

sqlite3 linux <<EOS
	drop table main_table;
EOS

rm ./hardware.txt
rm ./inode_data.txt
rm ./groups.txt
rm ./filesystem.txt
rm ./users.txt
rm ./tranverse_output.txt









